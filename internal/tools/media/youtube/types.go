package youtube

import "time"

// TranscriptResponse represents the response from transcript extraction
type TranscriptResponse struct {
	VideoID         string              `json:"video_id"`
	Title           string              `json:"title"`
	Language        string              `json:"language"`
	IsAutoGenerated bool                `json:"is_auto_generated"`
	Format          string              `json:"format"`
	Transcript      string              `json:"transcript,omitempty"` // For text format
	Segments        []TranscriptSegment `json:"segments,omitempty"`   // For structured formats
	Metadata        TranscriptMetadata  `json:"metadata"`
}

// TranscriptSegment represents a single transcript segment with timing
type TranscriptSegment struct {
	Text     string  `json:"text"`
	Start    float64 `json:"start"`    // Start time in seconds
	Duration float64 `json:"duration"` // Duration in seconds
}

// TranscriptMetadata contains metadata about the extraction
type TranscriptMetadata struct {
	ExtractionMethod   string    `json:"extraction_method"`
	ExtractedAt        time.Time `json:"extracted_at"`
	AvailableLanguages []string  `json:"available_languages,omitempty"`
}

// CaptionTrack represents a YouTube caption track
type CaptionTrack struct {
	BaseURL         string `json:"baseUrl"`
	Name            string `json:"name"`
	VssID           string `json:"vssId"`
	LanguageCode    string `json:"languageCode"`
	Kind            string `json:"kind,omitempty"`
	IsTranslatable  bool   `json:"isTranslatable"`
	IsAutoGenerated bool   `json:"isAutoGenerated"`
}

// VideoInfo represents basic YouTube video information
type VideoInfo struct {
	VideoID  string         `json:"videoId"`
	Title    string         `json:"title"`
	Captions []CaptionTrack `json:"captions"`
}

// TranscriptEntry represents a single transcript entry from YouTube's API
type TranscriptEntry struct {
	Text     string  `json:"text"`
	Start    float64 `json:"start"`
	Duration float64 `json:"dur"`
}

// InnerTubeTranscriptEntry represents transcript entry from InnerTube API
type InnerTubeTranscriptEntry struct {
	Text     string `json:"text"`
	Duration int    `json:"duration"`
	Offset   int    `json:"offset"`
}

// VideoPageData holds extracted data from YouTube video page
type VideoPageData struct {
	InnerTubeAPIKey       string
	Title                 string
	SerializedShareEntity string
	VisitorData           string
	ClickTrackingParams   string
}

// Config holds configuration for the YouTube transcript tool
type Config struct {
	CacheEnabled    bool
	CacheTTLMinutes int
	YouTubeAPIKey   string
}

// ExtractionMethod represents the method used to extract transcripts
type ExtractionMethod string

const (
	MethodUnofficial ExtractionMethod = "unofficial_api"
	MethodOfficial   ExtractionMethod = "youtube_data_api_v3"
	MethodYTDLP      ExtractionMethod = "yt_dlp"
)

// OutputFormat represents the supported output formats
type OutputFormat string

const (
	FormatText OutputFormat = "text"
	FormatJSON OutputFormat = "json"
	FormatSRT  OutputFormat = "srt"
	FormatVTT  OutputFormat = "vtt"
)

// LanguagePreference represents language selection preferences
type LanguagePreference struct {
	Primary   string
	Fallbacks []string
}

// GetDefaultLanguagePreference returns the default language preference (British English -> US English)
func GetDefaultLanguagePreference() LanguagePreference {
	return LanguagePreference{
		Primary:   "en-GB",
		Fallbacks: []string{"en", "en-US"},
	}
}
